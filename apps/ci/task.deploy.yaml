apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-deploy
  namespace: my-portofolio
spec:
  steps:
    - name: clone
      image: node
      script: |
        #!/bin/bash

        git clone https://github.com/fajjarnr/myportofolio.git /workspace/myportofolio

    - name: configure-project
      image: image-registry.openshift-image-registry.svc:5000/openshift/cli
      script: |
        #!/bin/bash

        set -euo pipefail

        cd /workspace/myportofolio/apps/ci
        oc apply -f imageStream.yaml
        oc apply -f buildConfig.yaml

    - name: build
      image: image-registry.openshift-image-registry.svc:5000/openshift/cli
      script: |
        #!/bin/bash

        set -euo pipefail

        oc start-build -F myportofolio -n my-portofolio

    - name: deploy
      image: image-registry.openshift-image-registry.svc:5000/openshift/cli
      script: |
        #!/bin/bash

        set -euxo pipefail

        cd /workspace/myportofolio/apps/ci
        oc apply -f deployment.yaml

        BUILDDATE=$(date +%Y-%m-%d-%H%M%S)
        oc patch deployment myportofolio -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"last-build\":\"$BUILDDATE\"}}}}}"

        oc apply -f service.yaml
        # oc apply -f route.yaml

        HOSTNAME="myportofolio.$(oc get ingresses.config.openshift.io  cluster -o jsonpath='{.spec.domain}')"

        oc apply -f <(cat <<-EOF
          apiVersion: route.openshift.io/v1
          kind: Route
          metadata:
            labels:
              app: myportofolio
            name: myportofolio
            namespace: my-portofolio
          spec:
            host: $HOSTNAME
            path: /
            port:
              targetPort: 3000
            to:
              kind: Service
              name: myportofolio
        EOF
        )
